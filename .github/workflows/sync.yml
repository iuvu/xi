name: File Transformation and Copy

on:
  workflow_dispatch:
    inputs:
      target_files:
        description: 'Source file paths (comma separated)'
        required: true
        default: 'Rules/list/Game/Sky.list,Rules/list/Game/SkyCN.list,Rules/list/Emby.list,Rules/list/live_television.list'
      search_chars:
        description: 'Characters to search for (comma separated)'
        required: true
        default: 'DOMAIN,,DOMAIN-SUFFIX,,DOMAIN-KEYWORD,,IP-CIDR,,IP-CIDR6,'
      replace_chars:
        description: 'Characters to replace with (comma separated)'
        required: true
        default: ' - DOMAIN,, - DOMAIN-SUFFIX,, - DOMAIN-KEYWORD,, - IP-CIDR,, - IP-CIDR6,'
      copy_destinations:
        description: 'Destination file paths (comma separated)'
        required: true
        default: '        default: 'Rules/yaml/Game/Sky.yaml,Rules/yaml/Game/SkyCN.yaml,Rules/yaml/Emby.yaml,Rules/yaml/live_television.yaml''

  push:
    paths:
      - 'Rules/list/**'

jobs:
  sync-rules:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup parameters
      run: |
        if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
          echo "TARGET_FILES=${{ github.event.inputs.target_files }}" >> $GITHUB_ENV
          echo "SEARCH_CHARS=${{ github.event.inputs.search_chars }}" >> $GITHUB_ENV
          echo "REPLACE_CHARS=${{ github.event.inputs.replace_chars }}" >> $GITHUB_ENV
          echo "COPY_DESTINATIONS=${{ github.event.inputs.copy_destinations }}" >> $GITHUB_ENV
        else
          echo "TARGET_FILES=Rules/list/Game/Sky.list,Rules/list/Game/SkyCN.list,Rules/list/Emby.list,Rules/list/live_television.list" >> $GITHUB_ENV
          echo "SEARCH_CHARS=DOMAIN,DOMAIN-SUFFIX,DOMAIN-KEYWORD,IP-CIDR,IP-CIDR6" >> $GITHUB_ENV
          echo "REPLACE_CHARS=- DOMAIN,- DOMAIN-SUFFIX,- DOMAIN-KEYWORD,- IP-CIDR,- IP-CIDR6" >> $GITHUB_ENV
          echo "COPY_DESTINATIONS=Rules/yaml/Game/Sky.yaml,Rules/yaml/Game/SkyCN.yaml,Rules/yaml/Emby.yaml,Rules/yaml/live_television.yaml" >> $GITHUB_ENV
        fi

    - name: Show current state
      run: |
        echo "=== CURRENT STATE ==="
        echo "Event: ${{ github.event_name }}"
        echo "Target Files: $TARGET_FILES"
        echo "Current directory: $(pwd)"
        echo "Files in Rules/list/:"
        ls -la Rules/list/ || echo "Directory not found"

    - name: Process file transformations
      run: |
        set -e  # Exit on any error
        
        echo "=== STARTING FILE PROCESSING ==="
        
        # Convert to arrays
        IFS=',' read -ra TARGET_ARRAY <<< "$TARGET_FILES"
        IFS=',' read -ra SEARCH_ARRAY <<< "$SEARCH_CHARS"
        IFS=',' read -ra REPLACE_ARRAY <<< "$REPLACE_CHARS"
        IFS=',' read -ra DEST_ARRAY <<< "$COPY_DESTINATIONS"
        
        echo "Arrays loaded:"
        echo "Targets: ${#TARGET_ARRAY[@]} files"
        echo "Search: ${#SEARCH_ARRAY[@]} patterns"
        echo "Replace: ${#REPLACE_ARRAY[@]} patterns"
        echo "Destinations: ${#DEST_ARRAY[@]} paths"
        
        # Validate
        if [ ${#SEARCH_ARRAY[@]} -ne ${#REPLACE_ARRAY[@]} ]; then
          echo "ERROR: Search and replace count mismatch"
          exit 1
        fi
        
        if [ ${#TARGET_ARRAY[@]} -ne ${#DEST_ARRAY[@]} ]; then
          echo "ERROR: File count mismatch"
          exit 1
        fi
        
        # Process files
        for i in "${!TARGET_ARRAY[@]}"; do
          SOURCE="${TARGET_ARRAY[i]}"
          DEST="${DEST_ARRAY[i]}"
          
          echo "--- Processing: $SOURCE -> $DEST ---"
          
          if [ ! -f "$SOURCE" ]; then
            echo "SKIP: Source file not found: $SOURCE"
            continue
          fi
          
          # Create directory
          mkdir -p "$(dirname "$DEST")"
          
          # Read content
          CONTENT=$(cat "$SOURCE")
          echo "Original: $(wc -l < "$SOURCE") lines"
          
          # Replace
          for j in "${!SEARCH_ARRAY[@]}"; do
            OLD="${SEARCH_ARRAY[j]}"
            NEW="${REPLACE_ARRAY[j]}"
            CONTENT="${CONTENT//$OLD/$NEW}"
            echo "  Replaced: $OLD -> $NEW"
          done
          
          # Write
          echo "$CONTENT" > "$DEST"
          echo "CREATED: $DEST"
        done
        
        echo "=== PROCESSING COMPLETE ==="

    - name: Commit changes
      run: |
        echo "=== COMMITTING ==="
        
        git config --local user.name "github-actions[bot]"
        git config --local user.email "github-actions[bot]@users.noreply.github.com"
        
        if git diff --quiet; then
          echo "No changes to commit"
          exit 0
        fi
        
        git add .
        
        if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
          git commit -m "Manual sync: ${{ github.event.inputs.target_files }}"
        else
          git commit -m "Auto sync: Rules update"
        fi
        
        git push
        echo "Changes committed"

    - name: Success
      run: echo "âœ… WORKFLOW COMPLETED SUCCESSFULLY"
